name: CI for Build & Push Docker Images by GitHub Action
on:
  push:
    branches:
      - main
    paths:
      - microservices/src/**
      - .github/workflows/ci.yaml

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the source code
      - name: Checkout Source Code
        uses: actions/checkout@v4

      # Step 2: Configure AWS Credentials (using GitHub Secrets)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      # Step 3: Login to Amazon ECR
      - id: login-ecr
        name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build and Push Docker Images
      - name: Build and Push Docker Images
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          COMMIT_HASH=$(git rev-parse --short HEAD)

          for DOCKERFILE in $(find microservices/src -name Dockerfile); do
            # Get service name based on Dockerfile location
            if [[ "$DOCKERFILE" == "microservices/src/cartservice/src/Dockerfile" ]]; then
              SERVICE="cartservice"
            else
              SERVICE=$(basename $(dirname $DOCKERFILE))
            fi

            IMAGE_TAG="$COMMIT_HASH"  # Use commit hash as the tag for the image
            REPO_NAME="${SERVICE}-smruti"
            ECR_URI="$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$REPO_NAME"
            
            echo "Building and pushing image for service: $SERVICE to ECR repo: $REPO_NAME with tag: $IMAGE_TAG"
            
            # Special logic for cartservice
            if [ "$SERVICE" == "cartservice" ]; then
              # Build the Docker image for cartservice using its specific Dockerfile and root directory as context
              docker build -t $SERVICE:$IMAGE_TAG -f microservices/src/cartservice/src/Dockerfile .
              # or (docker build -t $SERVICE:$IMAGE_TAG -f microservices/src/cartservice/src/Dockerfile microservices/
            else
              # Default build for all other services
              docker build -t $SERVICE:$IMAGE_TAG -f $DOCKERFILE $(dirname $DOCKERFILE)/../../
            fi

            # Tag the image and push it to ECR
            docker tag $SERVICE:$IMAGE_TAG $ECR_URI:$IMAGE_TAG
            docker push $ECR_URI:$IMAGE_TAG
          done

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps: 
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GIT_HUB_TOKEN }}
    - name: Update tag in Helm chart
      run: |
        # Get the short commit hash to update the tag
        IMAGE_TAG=$(git rev-parse --short ${{ github.sha }})
        
        # Update the tag in the appropriate Helm chart values.yaml files
        for VALUES_FILE in microservices/HelmCharts/microservices/values/*-values.yaml; do
          echo "Updating tag in $VALUES_FILE"
          sed -i "s/tag: .*/tag: \"$IMAGE_TAG\"/" $VALUES_FILE
        done
    - name: Commit and push changes
      run: |
        git config --global user.email "smruti.mohanty@infra360.io"
        git config --global user.name "Smruti Ranjan Mohanty"
        git add .
        git commit -m "Update tag in Helm chart for ArgoCD"
        git push
#Done